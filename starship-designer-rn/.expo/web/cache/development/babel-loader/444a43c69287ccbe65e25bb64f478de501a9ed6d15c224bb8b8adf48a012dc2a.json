{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { calculateTotalFuelMass, calculateVehicleServiceStaff, calculateDroneServiceStaff, calculateMedicalStaff } from \"../data/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultShipDesign = {\n  ship: {\n    name: '',\n    tech_level: 'A',\n    tonnage: 100,\n    configuration: 'standard',\n    fuel_weeks: 2,\n    missile_reloads: 0,\n    sand_reloads: 0,\n    description: ''\n  },\n  engines: [],\n  fittings: [{\n    fitting_type: 'comms_sensors',\n    comms_sensors_type: 'standard',\n    mass: 0,\n    cost: 0\n  }],\n  weapons: [],\n  defenses: [],\n  berths: [],\n  facilities: [],\n  cargo: [],\n  vehicles: [],\n  drones: []\n};\nvar ShipDesignContext = createContext(undefined);\nexport var ShipDesignProvider = function ShipDesignProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(defaultShipDesign),\n    _useState2 = _slicedToArray(_useState, 2),\n    shipDesign = _useState2[0],\n    setShipDesignState = _useState2[1];\n  var updateShipDesign = useCallback(function (updates) {\n    setShipDesignState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), updates);\n    });\n  }, []);\n  var resetShipDesign = useCallback(function () {\n    setShipDesignState(defaultShipDesign);\n  }, []);\n  var setShipDesign = useCallback(function (design) {\n    setShipDesignState(design);\n  }, []);\n  var calculateMass = useCallback(function () {\n    var used = 0;\n    used += shipDesign.engines.reduce(function (sum, engine) {\n      var shipTonnage = shipDesign.ship.tonnage;\n      var engineMass = shipTonnage * engine.performance * 0.02 * engine.quantity;\n      return sum + engineMass;\n    }, 0);\n    used += shipDesign.fittings.reduce(function (sum, fitting) {\n      return sum + fitting.mass;\n    }, 0);\n    used += shipDesign.weapons.reduce(function (sum, weapon) {\n      return sum + weapon.mass * weapon.quantity;\n    }, 0);\n    used += shipDesign.defenses.reduce(function (sum, defense) {\n      return sum + defense.mass * defense.quantity;\n    }, 0);\n    used += shipDesign.berths.reduce(function (sum, berth) {\n      return sum + berth.mass * berth.quantity;\n    }, 0);\n    used += shipDesign.facilities.reduce(function (sum, facility) {\n      return sum + facility.mass * facility.quantity;\n    }, 0);\n    used += shipDesign.cargo.reduce(function (sum, cargo) {\n      return sum + cargo.tonnage;\n    }, 0);\n    used += shipDesign.vehicles.reduce(function (sum, vehicle) {\n      return sum + vehicle.mass * vehicle.quantity;\n    }, 0);\n    used += shipDesign.drones.reduce(function (sum, drone) {\n      return sum + drone.mass * drone.quantity;\n    }, 0);\n    var jumpDrive = shipDesign.engines.find(function (e) {\n      return e.engine_type === 'jump';\n    });\n    var maneuverDrive = shipDesign.engines.find(function (e) {\n      return e.engine_type === 'maneuver';\n    });\n    var jumpPerformance = (jumpDrive == null ? void 0 : jumpDrive.performance) || 0;\n    var maneuverPerformance = (maneuverDrive == null ? void 0 : maneuverDrive.performance) || 0;\n    var fuelMass = calculateTotalFuelMass(shipDesign.ship.tonnage, jumpPerformance, maneuverPerformance, shipDesign.ship.fuel_weeks);\n    used += fuelMass;\n    used += shipDesign.ship.missile_reloads;\n    used += shipDesign.ship.sand_reloads;\n    var total = shipDesign.ship.tonnage;\n    var remaining = total - used;\n    return {\n      total: total,\n      used: used,\n      remaining: remaining,\n      isOverweight: remaining < 0\n    };\n  }, [shipDesign]);\n  var calculateCost = useCallback(function () {\n    var total = 0;\n    total += shipDesign.engines.reduce(function (sum, engine) {\n      var shipTonnage = shipDesign.ship.tonnage;\n      if (engine.engine_type === 'jump') {\n        return sum + shipTonnage * engine.performance * 0.02 * engine.quantity;\n      } else if (engine.engine_type === 'maneuver') {\n        return sum + shipTonnage * engine.performance * 0.01 * engine.quantity;\n      } else if (engine.engine_type === 'power_plant') {\n        return sum + shipTonnage * engine.performance * 0.02 * engine.quantity;\n      }\n      return sum;\n    }, 0);\n    total += shipDesign.fittings.reduce(function (sum, fitting) {\n      return sum + fitting.cost;\n    }, 0);\n    total += shipDesign.weapons.reduce(function (sum, weapon) {\n      return sum + weapon.cost * weapon.quantity;\n    }, 0);\n    total += shipDesign.defenses.reduce(function (sum, defense) {\n      return sum + defense.cost * defense.quantity;\n    }, 0);\n    total += shipDesign.berths.reduce(function (sum, berth) {\n      return sum + berth.cost * berth.quantity;\n    }, 0);\n    total += shipDesign.facilities.reduce(function (sum, facility) {\n      return sum + facility.cost * facility.quantity;\n    }, 0);\n    total += shipDesign.cargo.reduce(function (sum, cargo) {\n      return sum + cargo.cost;\n    }, 0);\n    total += shipDesign.vehicles.reduce(function (sum, vehicle) {\n      return sum + vehicle.cost * vehicle.quantity;\n    }, 0);\n    total += shipDesign.drones.reduce(function (sum, drone) {\n      return sum + drone.cost * drone.quantity;\n    }, 0);\n    total += shipDesign.ship.missile_reloads;\n    total += shipDesign.ship.sand_reloads * 0.1;\n    return {\n      total: total\n    };\n  }, [shipDesign]);\n  var calculateStaffRequirements = useCallback(function () {\n    var pilot = 1;\n    var navigator = 1;\n    var engineers = 0;\n    var shipTonnage = shipDesign.ship.tonnage;\n    if (shipTonnage === 100) {\n      engineers = 1;\n    } else if (shipTonnage === 200 || shipTonnage === 300) {\n      engineers = 2;\n    } else if (shipTonnage >= 400) {\n      var engineCount = shipDesign.engines.length;\n      engineers = Math.max(engineCount, 1);\n      for (var engine of shipDesign.engines) {\n        if (engine.mass > 100) {\n          engineers += Math.ceil(engine.mass / 100) - 1;\n        }\n      }\n    } else {\n      var totalEnginesWeight = shipDesign.engines.reduce(function (sum, engine) {\n        return sum + engine.mass;\n      }, 0);\n      engineers = Math.ceil(totalEnginesWeight / 100);\n    }\n    var weaponCount = shipDesign.weapons.filter(function (weapon) {\n      return weapon.weapon_name !== 'Hard Point';\n    }).reduce(function (sum, weapon) {\n      return sum + weapon.quantity;\n    }, 0);\n    var defenseCount = shipDesign.defenses.reduce(function (sum, defense) {\n      return sum + defense.quantity;\n    }, 0);\n    var gunners = weaponCount + defenseCount;\n    var vehicleService = calculateVehicleServiceStaff(shipDesign.vehicles);\n    var droneService = calculateDroneServiceStaff(shipDesign.drones);\n    var service = vehicleService + droneService;\n    var totalStaterooms = shipDesign.berths.filter(function (berth) {\n      return berth.berth_type === 'staterooms' || berth.berth_type === 'luxury_staterooms';\n    }).reduce(function (sum, berth) {\n      return sum + berth.quantity;\n    }, 0);\n    var stewards = Math.ceil(totalStaterooms / 8);\n    var medicalStaff = calculateMedicalStaff(shipDesign.facilities);\n    var nurses = medicalStaff.nurses;\n    var surgeons = medicalStaff.surgeons;\n    var techs = medicalStaff.techs;\n    var total = pilot + navigator + engineers + gunners + service + stewards + nurses + surgeons + techs;\n    return {\n      pilot: pilot,\n      navigator: navigator,\n      engineers: engineers,\n      gunners: gunners,\n      service: service,\n      stewards: stewards,\n      nurses: nurses,\n      surgeons: surgeons,\n      techs: techs,\n      total: total\n    };\n  }, [shipDesign]);\n  var value = {\n    shipDesign: shipDesign,\n    updateShipDesign: updateShipDesign,\n    calculateMass: calculateMass,\n    calculateCost: calculateCost,\n    calculateStaffRequirements: calculateStaffRequirements,\n    resetShipDesign: resetShipDesign,\n    setShipDesign: setShipDesign\n  };\n  return _jsx(ShipDesignContext.Provider, {\n    value: value,\n    children: children\n  });\n};\nexport var useShipDesign = function useShipDesign() {\n  var context = useContext(ShipDesignContext);\n  if (context === undefined) {\n    throw new Error('useShipDesign must be used within a ShipDesignProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","calculateTotalFuelMass","calculateVehicleServiceStaff","calculateDroneServiceStaff","calculateMedicalStaff","jsx","_jsx","defaultShipDesign","ship","name","tech_level","tonnage","configuration","fuel_weeks","missile_reloads","sand_reloads","description","engines","fittings","fitting_type","comms_sensors_type","mass","cost","weapons","defenses","berths","facilities","cargo","vehicles","drones","ShipDesignContext","undefined","ShipDesignProvider","_ref","children","_useState","_useState2","_slicedToArray","shipDesign","setShipDesignState","updateShipDesign","updates","prev","_objectSpread","resetShipDesign","setShipDesign","design","calculateMass","used","reduce","sum","engine","shipTonnage","engineMass","performance","quantity","fitting","weapon","defense","berth","facility","vehicle","drone","jumpDrive","find","e","engine_type","maneuverDrive","jumpPerformance","maneuverPerformance","fuelMass","total","remaining","isOverweight","calculateCost","calculateStaffRequirements","pilot","navigator","engineers","engineCount","length","Math","max","ceil","totalEnginesWeight","weaponCount","filter","weapon_name","defenseCount","gunners","vehicleService","droneService","service","totalStaterooms","berth_type","stewards","medicalStaff","nurses","surgeons","techs","value","Provider","useShipDesign","context","Error"],"sources":["/mnt/c/users/Dave/play/aid/starship-designer-rn/src/context/ShipDesignContext.tsx"],"sourcesContent":["// Context for managing ship design state across the app\nimport React, { createContext, useContext, useState, useCallback, ReactNode } from 'react';\nimport { ShipDesign, MassCalculation, CostCalculation, StaffRequirements } from '../types/ship';\nimport { \n  calculateTotalFuelMass, \n  calculateVehicleServiceStaff, \n  calculateDroneServiceStaff, \n  calculateMedicalStaff \n} from '../data/constants';\n\ninterface ShipDesignContextType {\n  shipDesign: ShipDesign;\n  updateShipDesign: (updates: Partial<ShipDesign>) => void;\n  calculateMass: () => MassCalculation;\n  calculateCost: () => CostCalculation;\n  calculateStaffRequirements: () => StaffRequirements;\n  resetShipDesign: () => void;\n  setShipDesign: (design: ShipDesign) => void;\n}\n\nconst defaultShipDesign: ShipDesign = {\n  ship: { \n    name: '', \n    tech_level: 'A', \n    tonnage: 100, \n    configuration: 'standard', \n    fuel_weeks: 2, \n    missile_reloads: 0, \n    sand_reloads: 0, \n    description: '' \n  },\n  engines: [],\n  fittings: [\n    {\n      fitting_type: 'comms_sensors',\n      comms_sensors_type: 'standard',\n      mass: 0,\n      cost: 0\n    }\n  ],\n  weapons: [],\n  defenses: [],\n  berths: [],\n  facilities: [],\n  cargo: [],\n  vehicles: [],\n  drones: []\n};\n\nconst ShipDesignContext = createContext<ShipDesignContextType | undefined>(undefined);\n\nexport const ShipDesignProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [shipDesign, setShipDesignState] = useState<ShipDesign>(defaultShipDesign);\n\n  const updateShipDesign = useCallback((updates: Partial<ShipDesign>) => {\n    setShipDesignState(prev => ({ ...prev, ...updates }));\n  }, []);\n\n  const resetShipDesign = useCallback(() => {\n    setShipDesignState(defaultShipDesign);\n  }, []);\n\n  const setShipDesign = useCallback((design: ShipDesign) => {\n    setShipDesignState(design);\n  }, []);\n\n  const calculateMass = useCallback((): MassCalculation => {\n    let used = 0;\n    \n    // Add engine masses (calculated dynamically)\n    used += shipDesign.engines.reduce((sum, engine) => {\n      const shipTonnage = shipDesign.ship.tonnage;\n      const engineMass = (shipTonnage * engine.performance * 0.02) * engine.quantity;\n      return sum + engineMass;\n    }, 0);\n    \n    // Add fitting masses\n    used += shipDesign.fittings.reduce((sum, fitting) => sum + fitting.mass, 0);\n    \n    // Add weapon masses\n    used += shipDesign.weapons.reduce((sum, weapon) => sum + (weapon.mass * weapon.quantity), 0);\n    \n    // Add defense masses\n    used += shipDesign.defenses.reduce((sum, defense) => sum + (defense.mass * defense.quantity), 0);\n    \n    // Add berth masses\n    used += shipDesign.berths.reduce((sum, berth) => sum + (berth.mass * berth.quantity), 0);\n    \n    // Add facility masses\n    used += shipDesign.facilities.reduce((sum, facility) => sum + (facility.mass * facility.quantity), 0);\n    \n    // Add cargo masses\n    used += shipDesign.cargo.reduce((sum, cargo) => sum + cargo.tonnage, 0);\n    \n    // Add vehicle masses\n    used += shipDesign.vehicles.reduce((sum, vehicle) => sum + (vehicle.mass * vehicle.quantity), 0);\n    \n    // Add drone masses\n    used += shipDesign.drones.reduce((sum, drone) => sum + (drone.mass * drone.quantity), 0);\n\n    // Add fuel tank mass\n    const jumpDrive = shipDesign.engines.find(e => e.engine_type === 'jump');\n    const maneuverDrive = shipDesign.engines.find(e => e.engine_type === 'maneuver');\n    const jumpPerformance = jumpDrive?.performance || 0;\n    const maneuverPerformance = maneuverDrive?.performance || 0;\n    const fuelMass = calculateTotalFuelMass(shipDesign.ship.tonnage, jumpPerformance, maneuverPerformance, shipDesign.ship.fuel_weeks);\n    used += fuelMass;\n\n    // Add missile reload mass\n    used += shipDesign.ship.missile_reloads;\n\n    // Add sand reload mass\n    used += shipDesign.ship.sand_reloads;\n\n    const total = shipDesign.ship.tonnage;\n    const remaining = total - used;\n    \n    return {\n      total,\n      used,\n      remaining,\n      isOverweight: remaining < 0\n    };\n  }, [shipDesign]);\n\n  const calculateCost = useCallback((): CostCalculation => {\n    let total = 0;\n    \n    // Add engine costs (calculated dynamically)\n    total += shipDesign.engines.reduce((sum, engine) => {\n      const shipTonnage = shipDesign.ship.tonnage;\n      if (engine.engine_type === 'jump') {\n        return sum + (shipTonnage * engine.performance * 0.02) * engine.quantity;\n      } else if (engine.engine_type === 'maneuver') {\n        return sum + (shipTonnage * engine.performance * 0.01) * engine.quantity;\n      } else if (engine.engine_type === 'power_plant') {\n        return sum + (shipTonnage * engine.performance * 0.02) * engine.quantity;\n      }\n      return sum;\n    }, 0);\n    \n    // Add fitting costs\n    total += shipDesign.fittings.reduce((sum, fitting) => sum + fitting.cost, 0);\n    \n    // Add weapon costs\n    total += shipDesign.weapons.reduce((sum, weapon) => sum + (weapon.cost * weapon.quantity), 0);\n    \n    // Add defense costs\n    total += shipDesign.defenses.reduce((sum, defense) => sum + (defense.cost * defense.quantity), 0);\n    \n    // Add berth costs\n    total += shipDesign.berths.reduce((sum, berth) => sum + (berth.cost * berth.quantity), 0);\n    \n    // Add facility costs\n    total += shipDesign.facilities.reduce((sum, facility) => sum + (facility.cost * facility.quantity), 0);\n    \n    // Add cargo costs\n    total += shipDesign.cargo.reduce((sum, cargo) => sum + cargo.cost, 0);\n    \n    // Add vehicle costs\n    total += shipDesign.vehicles.reduce((sum, vehicle) => sum + (vehicle.cost * vehicle.quantity), 0);\n    \n    // Add drone costs\n    total += shipDesign.drones.reduce((sum, drone) => sum + (drone.cost * drone.quantity), 0);\n\n    // Add missile reload costs (1 MCr per ton)\n    total += shipDesign.ship.missile_reloads;\n\n    // Add sand reload costs (0.1 MCr per ton)\n    total += shipDesign.ship.sand_reloads * 0.1;\n\n    return { total };\n  }, [shipDesign]);\n\n  const calculateStaffRequirements = useCallback((): StaffRequirements => {\n    const pilot = 1;\n    const navigator = 1;\n    \n    // Engineers: Based on ship tonnage and engine mass\n    let engineers = 0;\n    const shipTonnage = shipDesign.ship.tonnage;\n    \n    if (shipTonnage === 100) {\n      engineers = 1;\n    } else if (shipTonnage === 200 || shipTonnage === 300) {\n      engineers = 2;\n    } else if (shipTonnage >= 400) {\n      // At least one engineer per engine\n      const engineCount = shipDesign.engines.length;\n      engineers = Math.max(engineCount, 1);\n      \n      // Additional engineers for engines larger than 100 tons\n      for (const engine of shipDesign.engines) {\n        if (engine.mass > 100) {\n          engineers += Math.ceil(engine.mass / 100) - 1;\n        }\n      }\n    } else {\n      // For other ship sizes, use original logic as fallback\n      const totalEnginesWeight = shipDesign.engines.reduce((sum, engine) => sum + engine.mass, 0);\n      engineers = Math.ceil(totalEnginesWeight / 100);\n    }\n    \n    // Gunners: 1 per weapon/turret mount\n    const weaponCount = shipDesign.weapons\n      .filter(weapon => weapon.weapon_name !== 'Hard Point')\n      .reduce((sum, weapon) => sum + weapon.quantity, 0);\n    const defenseCount = shipDesign.defenses.reduce((sum, defense) => sum + defense.quantity, 0);\n    const gunners = weaponCount + defenseCount;\n    \n    // Service staff: for vehicle and drone maintenance\n    const vehicleService = calculateVehicleServiceStaff(shipDesign.vehicles);\n    const droneService = calculateDroneServiceStaff(shipDesign.drones);\n    const service = vehicleService + droneService;\n    \n    // Stewards: 1 per 8 staterooms, rounded up\n    const totalStaterooms = shipDesign.berths\n      .filter(berth => berth.berth_type === 'staterooms' || berth.berth_type === 'luxury_staterooms')\n      .reduce((sum, berth) => sum + berth.quantity, 0);\n    const stewards = Math.ceil(totalStaterooms / 8);\n    \n    // Medical staff: based on medical facilities\n    const medicalStaff = calculateMedicalStaff(shipDesign.facilities);\n    const nurses = medicalStaff.nurses;\n    const surgeons = medicalStaff.surgeons;\n    const techs = medicalStaff.techs;\n    \n    const total = pilot + navigator + engineers + gunners + service + stewards + nurses + surgeons + techs;\n    \n    return { pilot, navigator, engineers, gunners, service, stewards, nurses, surgeons, techs, total };\n  }, [shipDesign]);\n\n  const value: ShipDesignContextType = {\n    shipDesign,\n    updateShipDesign,\n    calculateMass,\n    calculateCost,\n    calculateStaffRequirements,\n    resetShipDesign,\n    setShipDesign\n  };\n\n  return (\n    <ShipDesignContext.Provider value={value}>\n      {children}\n    </ShipDesignContext.Provider>\n  );\n};\n\nexport const useShipDesign = (): ShipDesignContextType => {\n  const context = useContext(ShipDesignContext);\n  if (context === undefined) {\n    throw new Error('useShipDesign must be used within a ShipDesignProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}