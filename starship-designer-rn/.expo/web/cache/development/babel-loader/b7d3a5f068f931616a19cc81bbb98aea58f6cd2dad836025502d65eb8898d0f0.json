{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Picker } from '@react-native-picker/picker';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { ShipDesignContext } from \"../context/ShipDesignContext\";\nimport { getBridgeMassAndCost, COMMS_SENSORS_TYPES } from \"../data/constants\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FittingsScreen = function FittingsScreen() {\n  var _ref = useContext(ShipDesignContext),\n    shipDesign = _ref.shipDesign,\n    updateShipDesign = _ref.updateShipDesign;\n  var updateFitting = function updateFitting(fittingType, updatedFitting) {\n    var updatedFittings = shipDesign.fittings.map(function (fitting) {\n      return fitting.fitting_type === fittingType ? updatedFitting : fitting;\n    });\n    updateShipDesign(_objectSpread(_objectSpread({}, shipDesign), {}, {\n      fittings: updatedFittings\n    }));\n  };\n  var getBridgeFitting = function getBridgeFitting() {\n    return shipDesign.fittings.find(function (f) {\n      return f.fitting_type === 'bridge';\n    }) || {\n      fitting_type: 'bridge',\n      is_half_bridge: false,\n      quantity: 1\n    };\n  };\n  var getFuelTankFitting = function getFuelTankFitting() {\n    return shipDesign.fittings.find(function (f) {\n      return f.fitting_type === 'fuel_tank';\n    }) || {\n      fitting_type: 'fuel_tank',\n      fuel_weeks: 4,\n      quantity: 1\n    };\n  };\n  var getCommsSensorsFitting = function getCommsSensorsFitting() {\n    return shipDesign.fittings.find(function (f) {\n      return f.fitting_type === 'comms_sensors';\n    }) || {\n      fitting_type: 'comms_sensors',\n      comms_sensors_type: 'standard',\n      quantity: 1\n    };\n  };\n  var calculateBridgeMassAndCost = function calculateBridgeMassAndCost() {\n    var bridgeFitting = getBridgeFitting();\n    return getBridgeMassAndCost(shipDesign.ship.tonnage, bridgeFitting.is_half_bridge || false);\n  };\n  var calculateFuelMass = function calculateFuelMass() {\n    var _shipDesign$engines$f, _shipDesign$engines$f2;\n    var fuelFitting = getFuelTankFitting();\n    var weeks = fuelFitting.fuel_weeks || 4;\n    var jumpPerformance = ((_shipDesign$engines$f = shipDesign.engines.find(function (e) {\n      return e.engine_type === 'jump';\n    })) == null ? void 0 : _shipDesign$engines$f.performance) || 0;\n    var maneuverPerformance = ((_shipDesign$engines$f2 = shipDesign.engines.find(function (e) {\n      return e.engine_type === 'maneuver';\n    })) == null ? void 0 : _shipDesign$engines$f2.performance) || 0;\n    var jumpFuel = shipDesign.ship.tonnage * jumpPerformance * 0.1;\n    var maneuverFuel = shipDesign.ship.tonnage * maneuverPerformance * 0.01 * weeks;\n    return jumpFuel + maneuverFuel;\n  };\n  var calculateCommsSensorsMassAndCost = function calculateCommsSensorsMassAndCost() {\n    var commsFitting = getCommsSensorsFitting();\n    var sensorType = COMMS_SENSORS_TYPES.find(function (s) {\n      return s.type === commsFitting.comms_sensors_type;\n    });\n    return sensorType || {\n      mass: 0,\n      cost: 0\n    };\n  };\n  var ensureFittingExists = function ensureFittingExists(fittingType, defaultFitting) {\n    var exists = shipDesign.fittings.some(function (f) {\n      return f.fitting_type === fittingType;\n    });\n    if (!exists) {\n      updateShipDesign(_objectSpread(_objectSpread({}, shipDesign), {}, {\n        fittings: [].concat(_toConsumableArray(shipDesign.fittings), [defaultFitting])\n      }));\n    }\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      style: styles.scrollView,\n      showsVerticalScrollIndicator: false,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Ship Fittings\"\n      }), _jsxs(View, {\n        style: styles.sectionCard,\n        children: [_jsxs(View, {\n          style: styles.sectionHeader,\n          children: [_jsx(Icon, {\n            name: \"account-balance\",\n            size: 24,\n            color: \"#3498db\"\n          }), _jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Bridge\"\n          })]\n        }), _jsxs(View, {\n          style: styles.formRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Type:\"\n          }), _jsx(View, {\n            style: styles.pickerContainer,\n            children: _jsxs(Picker, {\n              selectedValue: getBridgeFitting().is_half_bridge ? 'half' : 'full',\n              style: styles.picker,\n              onValueChange: function onValueChange(value) {\n                var bridgeFitting = getBridgeFitting();\n                var updatedFitting = _objectSpread(_objectSpread({}, bridgeFitting), {}, {\n                  is_half_bridge: value === 'half'\n                });\n                ensureFittingExists('bridge', updatedFitting);\n                updateFitting('bridge', updatedFitting);\n              },\n              children: [_jsx(Picker.Item, {\n                label: \"Full Bridge\",\n                value: \"full\"\n              }), _jsx(Picker.Item, {\n                label: \"Half Bridge\",\n                value: \"half\"\n              })]\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.statsContainer,\n          children: [_jsxs(View, {\n            style: styles.statItem,\n            children: [_jsx(Text, {\n              style: styles.statLabel,\n              children: \"Mass:\"\n            }), _jsxs(Text, {\n              style: styles.statValue,\n              children: [calculateBridgeMassAndCost().mass, \" tons\"]\n            })]\n          }), _jsxs(View, {\n            style: styles.statItem,\n            children: [_jsx(Text, {\n              style: styles.statLabel,\n              children: \"Cost:\"\n            }), _jsxs(Text, {\n              style: styles.statValue,\n              children: [calculateBridgeMassAndCost().cost, \" MCr\"]\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.sectionCard,\n        children: [_jsxs(View, {\n          style: styles.sectionHeader,\n          children: [_jsx(Icon, {\n            name: \"local-gas-station\",\n            size: 24,\n            color: \"#e67e22\"\n          }), _jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Fuel Tanks\"\n          })]\n        }), _jsxs(View, {\n          style: styles.formRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Fuel Duration:\"\n          }), _jsx(View, {\n            style: styles.pickerContainer,\n            children: _jsxs(Picker, {\n              selectedValue: getFuelTankFitting().fuel_weeks || 4,\n              style: styles.picker,\n              onValueChange: function onValueChange(value) {\n                var fuelFitting = getFuelTankFitting();\n                var updatedFitting = _objectSpread(_objectSpread({}, fuelFitting), {}, {\n                  fuel_weeks: value\n                });\n                ensureFittingExists('fuel_tank', updatedFitting);\n                updateFitting('fuel_tank', updatedFitting);\n              },\n              children: [_jsx(Picker.Item, {\n                label: \"1 Week\",\n                value: 1\n              }), _jsx(Picker.Item, {\n                label: \"2 Weeks\",\n                value: 2\n              }), _jsx(Picker.Item, {\n                label: \"3 Weeks\",\n                value: 3\n              }), _jsx(Picker.Item, {\n                label: \"4 Weeks\",\n                value: 4\n              }), _jsx(Picker.Item, {\n                label: \"5 Weeks\",\n                value: 5\n              }), _jsx(Picker.Item, {\n                label: \"6 Weeks\",\n                value: 6\n              }), _jsx(Picker.Item, {\n                label: \"8 Weeks\",\n                value: 8\n              }), _jsx(Picker.Item, {\n                label: \"12 Weeks\",\n                value: 12\n              })]\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.statsContainer,\n          children: [_jsxs(View, {\n            style: styles.statItem,\n            children: [_jsx(Text, {\n              style: styles.statLabel,\n              children: \"Fuel Mass:\"\n            }), _jsxs(Text, {\n              style: styles.statValue,\n              children: [calculateFuelMass().toFixed(1), \" tons\"]\n            })]\n          }), _jsxs(View, {\n            style: styles.statItem,\n            children: [_jsx(Text, {\n              style: styles.statLabel,\n              children: \"Cost:\"\n            }), _jsx(Text, {\n              style: styles.statValue,\n              children: \"0.00 MCr\"\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.sectionCard,\n        children: [_jsxs(View, {\n          style: styles.sectionHeader,\n          children: [_jsx(Icon, {\n            name: \"wifi\",\n            size: 24,\n            color: \"#9b59b6\"\n          }), _jsx(Text, {\n            style: styles.sectionTitle,\n            children: \"Communications & Sensors\"\n          })]\n        }), _jsxs(View, {\n          style: styles.formRow,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Type:\"\n          }), _jsx(View, {\n            style: styles.pickerContainer,\n            children: _jsx(Picker, {\n              selectedValue: getCommsSensorsFitting().comms_sensors_type || 'standard',\n              style: styles.picker,\n              onValueChange: function onValueChange(value) {\n                var commsFitting = getCommsSensorsFitting();\n                var updatedFitting = _objectSpread(_objectSpread({}, commsFitting), {}, {\n                  comms_sensors_type: value\n                });\n                ensureFittingExists('comms_sensors', updatedFitting);\n                updateFitting('comms_sensors', updatedFitting);\n              },\n              children: COMMS_SENSORS_TYPES.map(function (sensor) {\n                return _jsx(Picker.Item, {\n                  label: sensor.name,\n                  value: sensor.type\n                }, sensor.type);\n              })\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.statsContainer,\n          children: [_jsxs(View, {\n            style: styles.statItem,\n            children: [_jsx(Text, {\n              style: styles.statLabel,\n              children: \"Mass:\"\n            }), _jsxs(Text, {\n              style: styles.statValue,\n              children: [calculateCommsSensorsMassAndCost().mass, \" tons\"]\n            })]\n          }), _jsxs(View, {\n            style: styles.statItem,\n            children: [_jsx(Text, {\n              style: styles.statLabel,\n              children: \"Cost:\"\n            }), _jsxs(Text, {\n              style: styles.statValue,\n              children: [calculateCommsSensorsMassAndCost().cost, \" MCr\"]\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.totalsCard,\n        children: [_jsx(Text, {\n          style: styles.totalsTitle,\n          children: \"Total Fittings\"\n        }), _jsxs(View, {\n          style: styles.totalsRow,\n          children: [_jsx(Text, {\n            style: styles.totalsLabel,\n            children: \"Total Mass:\"\n          }), _jsxs(Text, {\n            style: styles.totalsValue,\n            children: [(calculateBridgeMassAndCost().mass + calculateFuelMass() + calculateCommsSensorsMassAndCost().mass).toFixed(1), \" tons\"]\n          })]\n        }), _jsxs(View, {\n          style: styles.totalsRow,\n          children: [_jsx(Text, {\n            style: styles.totalsLabel,\n            children: \"Total Cost:\"\n          }), _jsxs(Text, {\n            style: styles.totalsValue,\n            children: [(calculateBridgeMassAndCost().cost + calculateCommsSensorsMassAndCost().cost).toFixed(2), \" MCr\"]\n          })]\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa'\n  },\n  scrollView: {\n    flex: 1,\n    padding: 16\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#2c3e50',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  sectionCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: '#2c3e50',\n    marginLeft: 12\n  },\n  formRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#34495e',\n    width: 120\n  },\n  pickerContainer: {\n    flex: 1,\n    backgroundColor: '#ecf0f1',\n    borderRadius: 8,\n    marginLeft: 12\n  },\n  picker: {\n    height: 50\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: '#ecf0f1'\n  },\n  statItem: {\n    alignItems: 'center'\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#7f8c8d',\n    marginBottom: 4\n  },\n  statValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2c3e50'\n  },\n  totalsCard: {\n    backgroundColor: '#27ae60',\n    borderRadius: 12,\n    padding: 16,\n    marginTop: 8\n  },\n  totalsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#fff',\n    textAlign: 'center',\n    marginBottom: 12\n  },\n  totalsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8\n  },\n  totalsLabel: {\n    fontSize: 16,\n    color: '#ecf0f1'\n  },\n  totalsValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#fff'\n  }\n});\nexport default FittingsScreen;","map":{"version":3,"names":["React","useContext","View","Text","StyleSheet","ScrollView","Picker","Icon","ShipDesignContext","getBridgeMassAndCost","COMMS_SENSORS_TYPES","jsx","_jsx","jsxs","_jsxs","FittingsScreen","_ref","shipDesign","updateShipDesign","updateFitting","fittingType","updatedFitting","updatedFittings","fittings","map","fitting","fitting_type","_objectSpread","getBridgeFitting","find","f","is_half_bridge","quantity","getFuelTankFitting","fuel_weeks","getCommsSensorsFitting","comms_sensors_type","calculateBridgeMassAndCost","bridgeFitting","ship","tonnage","calculateFuelMass","_shipDesign$engines$f","_shipDesign$engines$f2","fuelFitting","weeks","jumpPerformance","engines","e","engine_type","performance","maneuverPerformance","jumpFuel","maneuverFuel","calculateCommsSensorsMassAndCost","commsFitting","sensorType","s","type","mass","cost","ensureFittingExists","defaultFitting","exists","some","concat","_toConsumableArray","style","styles","container","children","scrollView","showsVerticalScrollIndicator","title","sectionCard","sectionHeader","name","size","color","sectionTitle","formRow","label","pickerContainer","selectedValue","picker","onValueChange","value","Item","statsContainer","statItem","statLabel","statValue","toFixed","sensor","totalsCard","totalsTitle","totalsRow","totalsLabel","totalsValue","create","flex","backgroundColor","padding","fontSize","fontWeight","marginBottom","textAlign","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","flexDirection","alignItems","marginLeft","justifyContent","paddingTop","borderTopWidth","borderTopColor","marginTop"],"sources":["/mnt/c/users/Dave/play/aid/starship-designer-rn/src/screens/FittingsScreen.tsx"],"sourcesContent":["// Fittings Screen - Configure ship fittings like bridge, fuel tanks, sensors, etc.\nimport React, { useContext } from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet, \n  ScrollView, \n  TouchableOpacity \n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { ShipDesignContext } from '../context/ShipDesignContext';\nimport { Fitting } from '../types/ship';\nimport { getBridgeMassAndCost, COMMS_SENSORS_TYPES } from '../data/constants';\n\nconst FittingsScreen: React.FC = () => {\n  const { shipDesign, updateShipDesign } = useContext(ShipDesignContext)!;\n\n  const updateFitting = (fittingType: string, updatedFitting: Fitting) => {\n    const updatedFittings = shipDesign.fittings.map(fitting => \n      fitting.fitting_type === fittingType ? updatedFitting : fitting\n    );\n    \n    updateShipDesign({\n      ...shipDesign,\n      fittings: updatedFittings\n    });\n  };\n\n  const getBridgeFitting = (): Fitting => {\n    return shipDesign.fittings.find(f => f.fitting_type === 'bridge') || {\n      fitting_type: 'bridge',\n      is_half_bridge: false,\n      quantity: 1\n    };\n  };\n\n  const getFuelTankFitting = (): Fitting => {\n    return shipDesign.fittings.find(f => f.fitting_type === 'fuel_tank') || {\n      fitting_type: 'fuel_tank',\n      fuel_weeks: 4,\n      quantity: 1\n    };\n  };\n\n  const getCommsSensorsFitting = (): Fitting => {\n    return shipDesign.fittings.find(f => f.fitting_type === 'comms_sensors') || {\n      fitting_type: 'comms_sensors',\n      comms_sensors_type: 'standard',\n      quantity: 1\n    };\n  };\n\n  const calculateBridgeMassAndCost = () => {\n    const bridgeFitting = getBridgeFitting();\n    return getBridgeMassAndCost(shipDesign.ship.tonnage, bridgeFitting.is_half_bridge || false);\n  };\n\n  const calculateFuelMass = () => {\n    const fuelFitting = getFuelTankFitting();\n    const weeks = fuelFitting.fuel_weeks || 4;\n    const jumpPerformance = shipDesign.engines.find(e => e.engine_type === 'jump')?.performance || 0;\n    const maneuverPerformance = shipDesign.engines.find(e => e.engine_type === 'maneuver')?.performance || 0;\n    \n    const jumpFuel = shipDesign.ship.tonnage * jumpPerformance * 0.1;\n    const maneuverFuel = (shipDesign.ship.tonnage * maneuverPerformance * 0.01) * weeks;\n    \n    return jumpFuel + maneuverFuel;\n  };\n\n  const calculateCommsSensorsMassAndCost = () => {\n    const commsFitting = getCommsSensorsFitting();\n    const sensorType = COMMS_SENSORS_TYPES.find(s => s.type === commsFitting.comms_sensors_type);\n    return sensorType || { mass: 0, cost: 0 };\n  };\n\n  const ensureFittingExists = (fittingType: string, defaultFitting: Fitting) => {\n    const exists = shipDesign.fittings.some(f => f.fitting_type === fittingType);\n    if (!exists) {\n      updateShipDesign({\n        ...shipDesign,\n        fittings: [...shipDesign.fittings, defaultFitting]\n      });\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\n        <Text style={styles.title}>Ship Fittings</Text>\n\n        {/* Bridge Section */}\n        <View style={styles.sectionCard}>\n          <View style={styles.sectionHeader}>\n            <Icon name=\"account-balance\" size={24} color=\"#3498db\" />\n            <Text style={styles.sectionTitle}>Bridge</Text>\n          </View>\n\n          <View style={styles.formRow}>\n            <Text style={styles.label}>Type:</Text>\n            <View style={styles.pickerContainer}>\n              <Picker\n                selectedValue={getBridgeFitting().is_half_bridge ? 'half' : 'full'}\n                style={styles.picker}\n                onValueChange={(value) => {\n                  const bridgeFitting = getBridgeFitting();\n                  const updatedFitting = {\n                    ...bridgeFitting,\n                    is_half_bridge: value === 'half'\n                  };\n                  ensureFittingExists('bridge', updatedFitting);\n                  updateFitting('bridge', updatedFitting);\n                }}\n              >\n                <Picker.Item label=\"Full Bridge\" value=\"full\" />\n                <Picker.Item label=\"Half Bridge\" value=\"half\" />\n              </Picker>\n            </View>\n          </View>\n\n          <View style={styles.statsContainer}>\n            <View style={styles.statItem}>\n              <Text style={styles.statLabel}>Mass:</Text>\n              <Text style={styles.statValue}>{calculateBridgeMassAndCost().mass} tons</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={styles.statLabel}>Cost:</Text>\n              <Text style={styles.statValue}>{calculateBridgeMassAndCost().cost} MCr</Text>\n            </View>\n          </View>\n        </View>\n\n        {/* Fuel Tanks Section */}\n        <View style={styles.sectionCard}>\n          <View style={styles.sectionHeader}>\n            <Icon name=\"local-gas-station\" size={24} color=\"#e67e22\" />\n            <Text style={styles.sectionTitle}>Fuel Tanks</Text>\n          </View>\n\n          <View style={styles.formRow}>\n            <Text style={styles.label}>Fuel Duration:</Text>\n            <View style={styles.pickerContainer}>\n              <Picker\n                selectedValue={getFuelTankFitting().fuel_weeks || 4}\n                style={styles.picker}\n                onValueChange={(value) => {\n                  const fuelFitting = getFuelTankFitting();\n                  const updatedFitting = {\n                    ...fuelFitting,\n                    fuel_weeks: value\n                  };\n                  ensureFittingExists('fuel_tank', updatedFitting);\n                  updateFitting('fuel_tank', updatedFitting);\n                }}\n              >\n                <Picker.Item label=\"1 Week\" value={1} />\n                <Picker.Item label=\"2 Weeks\" value={2} />\n                <Picker.Item label=\"3 Weeks\" value={3} />\n                <Picker.Item label=\"4 Weeks\" value={4} />\n                <Picker.Item label=\"5 Weeks\" value={5} />\n                <Picker.Item label=\"6 Weeks\" value={6} />\n                <Picker.Item label=\"8 Weeks\" value={8} />\n                <Picker.Item label=\"12 Weeks\" value={12} />\n              </Picker>\n            </View>\n          </View>\n\n          <View style={styles.statsContainer}>\n            <View style={styles.statItem}>\n              <Text style={styles.statLabel}>Fuel Mass:</Text>\n              <Text style={styles.statValue}>{calculateFuelMass().toFixed(1)} tons</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={styles.statLabel}>Cost:</Text>\n              <Text style={styles.statValue}>0.00 MCr</Text>\n            </View>\n          </View>\n        </View>\n\n        {/* Communications & Sensors Section */}\n        <View style={styles.sectionCard}>\n          <View style={styles.sectionHeader}>\n            <Icon name=\"wifi\" size={24} color=\"#9b59b6\" />\n            <Text style={styles.sectionTitle}>Communications & Sensors</Text>\n          </View>\n\n          <View style={styles.formRow}>\n            <Text style={styles.label}>Type:</Text>\n            <View style={styles.pickerContainer}>\n              <Picker\n                selectedValue={getCommsSensorsFitting().comms_sensors_type || 'standard'}\n                style={styles.picker}\n                onValueChange={(value) => {\n                  const commsFitting = getCommsSensorsFitting();\n                  const updatedFitting = {\n                    ...commsFitting,\n                    comms_sensors_type: value\n                  };\n                  ensureFittingExists('comms_sensors', updatedFitting);\n                  updateFitting('comms_sensors', updatedFitting);\n                }}\n              >\n                {COMMS_SENSORS_TYPES.map(sensor => (\n                  <Picker.Item \n                    key={sensor.type} \n                    label={sensor.name} \n                    value={sensor.type} \n                  />\n                ))}\n              </Picker>\n            </View>\n          </View>\n\n          <View style={styles.statsContainer}>\n            <View style={styles.statItem}>\n              <Text style={styles.statLabel}>Mass:</Text>\n              <Text style={styles.statValue}>{calculateCommsSensorsMassAndCost().mass} tons</Text>\n            </View>\n            <View style={styles.statItem}>\n              <Text style={styles.statLabel}>Cost:</Text>\n              <Text style={styles.statValue}>{calculateCommsSensorsMassAndCost().cost} MCr</Text>\n            </View>\n          </View>\n        </View>\n\n        {/* Total Summary */}\n        <View style={styles.totalsCard}>\n          <Text style={styles.totalsTitle}>Total Fittings</Text>\n          <View style={styles.totalsRow}>\n            <Text style={styles.totalsLabel}>Total Mass:</Text>\n            <Text style={styles.totalsValue}>\n              {(calculateBridgeMassAndCost().mass + calculateFuelMass() + calculateCommsSensorsMassAndCost().mass).toFixed(1)} tons\n            </Text>\n          </View>\n          <View style={styles.totalsRow}>\n            <Text style={styles.totalsLabel}>Total Cost:</Text>\n            <Text style={styles.totalsValue}>\n              {(calculateBridgeMassAndCost().cost + calculateCommsSensorsMassAndCost().cost).toFixed(2)} MCr\n            </Text>\n          </View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  scrollView: {\n    flex: 1,\n    padding: 16,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#2c3e50',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  sectionCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: '#2c3e50',\n    marginLeft: 12,\n  },\n  formRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#34495e',\n    width: 120,\n  },\n  pickerContainer: {\n    flex: 1,\n    backgroundColor: '#ecf0f1',\n    borderRadius: 8,\n    marginLeft: 12,\n  },\n  picker: {\n    height: 50,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: '#ecf0f1',\n  },\n  statItem: {\n    alignItems: 'center',\n  },\n  statLabel: {\n    fontSize: 14,\n    color: '#7f8c8d',\n    marginBottom: 4,\n  },\n  statValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2c3e50',\n  },\n  totalsCard: {\n    backgroundColor: '#27ae60',\n    borderRadius: 12,\n    padding: 16,\n    marginTop: 8,\n  },\n  totalsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#fff',\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  totalsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  totalsLabel: {\n    fontSize: 16,\n    color: '#ecf0f1',\n  },\n  totalsValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#fff',\n  },\n});\n\nexport default FittingsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}