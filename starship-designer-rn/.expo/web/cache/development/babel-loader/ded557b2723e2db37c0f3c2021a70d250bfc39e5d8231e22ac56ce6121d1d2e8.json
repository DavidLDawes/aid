{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { ShipDesignContext } from \"../context/ShipDesignContext\";\nimport { getBridgeMassAndCost, calculateTotalFuelMass, WEAPON_TYPES, DEFENSE_TYPES, BERTH_TYPES, FACILITY_TYPES, CARGO_TYPES, VEHICLE_TYPES, DRONE_TYPES, COMMS_SENSORS_TYPES } from \"../data/constants\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ShipDesignScreen = function ShipDesignScreen() {\n  var _ref = useContext(ShipDesignContext),\n    shipDesign = _ref.shipDesign,\n    staffRequirements = _ref.staffRequirements;\n  var generateTableData = function generateTableData() {\n    var _shipDesign$engines$f, _shipDesign$engines$f2;\n    var rows = [];\n    rows.push({\n      category: 'Hull',\n      item: `${shipDesign.ship.tonnage} tons`,\n      mass: shipDesign.ship.tonnage,\n      cost: shipDesign.ship.hull_cost\n    });\n    var bridgeFitting = shipDesign.fittings.find(function (f) {\n      return f.fitting_type === 'bridge';\n    });\n    var isHalfBridge = (bridgeFitting == null ? void 0 : bridgeFitting.is_half_bridge) || false;\n    var bridgeData = getBridgeMassAndCost(shipDesign.ship.tonnage, isHalfBridge);\n    rows.push({\n      category: 'Bridge',\n      item: isHalfBridge ? 'Half Bridge' : 'Bridge',\n      mass: bridgeData.mass,\n      cost: bridgeData.cost\n    });\n    if (shipDesign.engines.length > 0) {\n      shipDesign.engines.forEach(function (engine) {\n        var mass = shipDesign.ship.tonnage * engine.performance * 0.02 * engine.quantity;\n        var cost = engine.engine_type === 'jump' ? shipDesign.ship.tonnage * engine.performance * 0.02 * engine.quantity : shipDesign.ship.tonnage * engine.performance * 0.01 * engine.quantity;\n        var displayQuantity = engine.quantity > 1 ? ` (x${engine.quantity})` : '';\n        rows.push({\n          category: 'Engines',\n          item: `${engine.engine_type === 'jump' ? 'Jump' : 'Maneuver'} Drive-${engine.performance}${displayQuantity}`,\n          mass: mass,\n          cost: cost\n        });\n      });\n    }\n    var fuelFitting = shipDesign.fittings.find(function (f) {\n      return f.fitting_type === 'fuel_tank';\n    });\n    var fuelWeeks = (fuelFitting == null ? void 0 : fuelFitting.fuel_weeks) || 4;\n    var jumpPerformance = ((_shipDesign$engines$f = shipDesign.engines.find(function (e) {\n      return e.engine_type === 'jump';\n    })) == null ? void 0 : _shipDesign$engines$f.performance) || 0;\n    var maneuverPerformance = ((_shipDesign$engines$f2 = shipDesign.engines.find(function (e) {\n      return e.engine_type === 'maneuver';\n    })) == null ? void 0 : _shipDesign$engines$f2.performance) || 0;\n    var fuelMass = calculateTotalFuelMass(shipDesign.ship.tonnage, jumpPerformance, maneuverPerformance, fuelWeeks);\n    if (fuelMass > 0) {\n      rows.push({\n        category: 'Fuel',\n        item: `Fuel (${fuelWeeks} weeks)`,\n        mass: fuelMass,\n        cost: 0\n      });\n    }\n    var commsFitting = shipDesign.fittings.find(function (f) {\n      return f.fitting_type === 'comms_sensors';\n    });\n    var commsType = (commsFitting == null ? void 0 : commsFitting.comms_sensors_type) || 'standard';\n    var commsData = COMMS_SENSORS_TYPES.find(function (c) {\n      return c.type === commsType;\n    });\n    if (commsData && commsData.mass > 0) {\n      rows.push({\n        category: 'Communications',\n        item: `${commsData.name} Sensors`,\n        mass: commsData.mass,\n        cost: commsData.cost\n      });\n    }\n    if (shipDesign.weapons.length > 0) {\n      shipDesign.weapons.forEach(function (weapon) {\n        var weaponType = WEAPON_TYPES.find(function (w) {\n          return w.name === weapon.weapon_type;\n        });\n        if (weaponType) {\n          var displayQuantity = weapon.quantity > 1 ? ` (x${weapon.quantity})` : '';\n          rows.push({\n            category: 'Weapons',\n            item: `${weapon.weapon_type}${displayQuantity}`,\n            mass: weaponType.mass * weapon.quantity,\n            cost: weaponType.cost * weapon.quantity\n          });\n        }\n      });\n    }\n    if (shipDesign.defenses.length > 0) {\n      shipDesign.defenses.forEach(function (defense) {\n        var defenseType = DEFENSE_TYPES.find(function (d) {\n          return d.type === defense.defense_type;\n        });\n        if (defenseType) {\n          var displayQuantity = defense.quantity > 1 ? ` (x${defense.quantity})` : '';\n          rows.push({\n            category: 'Defenses',\n            item: `${defenseType.name}${displayQuantity}`,\n            mass: defenseType.mass * defense.quantity,\n            cost: defenseType.cost * defense.quantity\n          });\n        }\n      });\n      var totalSand = shipDesign.defenses.reduce(function (total, defense) {\n        if (defense.defense_type.includes('sandcaster') && defense.sand_tons && defense.sand_tons > 0) {\n          return total + defense.sand_tons;\n        }\n        return total;\n      }, 0);\n      if (totalSand > 0) {\n        rows.push({\n          category: 'Defenses',\n          item: 'Sand',\n          mass: totalSand,\n          cost: 0\n        });\n      }\n    }\n    if (shipDesign.berths.length > 0) {\n      shipDesign.berths.forEach(function (berth) {\n        var berthType = BERTH_TYPES.find(function (b) {\n          return b.type === berth.berth_type;\n        });\n        if (berthType && berth.quantity > 0) {\n          var displayQuantity = berth.quantity > 1 ? ` (x${berth.quantity})` : '';\n          rows.push({\n            category: 'Berths',\n            item: `${berthType.name}${displayQuantity}`,\n            mass: berthType.mass * berth.quantity,\n            cost: berthType.cost * berth.quantity\n          });\n        }\n      });\n    }\n    if (shipDesign.facilities.length > 0) {\n      shipDesign.facilities.forEach(function (facility) {\n        var facilityType = FACILITY_TYPES.find(function (f) {\n          return f.type === facility.facility_type;\n        });\n        if (facilityType && facility.quantity > 0) {\n          var displayQuantity = facility.quantity > 1 ? ` (x${facility.quantity})` : '';\n          rows.push({\n            category: 'Rec/Health',\n            item: `${facilityType.name}${displayQuantity}`,\n            mass: facilityType.mass * facility.quantity,\n            cost: facilityType.cost * facility.quantity\n          });\n        }\n      });\n    }\n    if (shipDesign.cargo.length > 0) {\n      shipDesign.cargo.forEach(function (cargo) {\n        var cargoType = CARGO_TYPES.find(function (c) {\n          return c.type === cargo.cargo_type;\n        });\n        if (cargoType && cargo.tonnage > 0) {\n          rows.push({\n            category: 'Cargo',\n            item: cargoType.name,\n            mass: cargo.tonnage,\n            cost: cargoType.costPerTon * cargo.tonnage\n          });\n        }\n      });\n    }\n    if (shipDesign.vehicles.length > 0) {\n      shipDesign.vehicles.forEach(function (vehicle) {\n        var vehicleType = VEHICLE_TYPES.find(function (v) {\n          return v.type === vehicle.vehicle_type;\n        });\n        if (vehicleType && vehicle.quantity > 0) {\n          var displayQuantity = vehicle.quantity > 1 ? ` (x${vehicle.quantity})` : '';\n          rows.push({\n            category: 'Vehicles',\n            item: `${vehicleType.name}${displayQuantity}`,\n            mass: vehicleType.mass * vehicle.quantity,\n            cost: vehicleType.cost * vehicle.quantity\n          });\n        }\n      });\n    }\n    if (shipDesign.drones.length > 0) {\n      shipDesign.drones.forEach(function (drone) {\n        var droneType = DRONE_TYPES.find(function (d) {\n          return d.type === drone.drone_type;\n        });\n        if (droneType && drone.quantity > 0) {\n          var displayQuantity = drone.quantity > 1 ? ` (x${drone.quantity})` : '';\n          rows.push({\n            category: 'Drones',\n            item: `${droneType.name}${displayQuantity}`,\n            mass: droneType.mass * drone.quantity,\n            cost: droneType.cost * drone.quantity\n          });\n        }\n      });\n    }\n    return rows;\n  };\n  var calculateTotals = function calculateTotals(rows) {\n    return {\n      totalMass: rows.reduce(function (sum, row) {\n        return sum + row.mass;\n      }, 0),\n      totalCost: rows.reduce(function (sum, row) {\n        return sum + row.cost;\n      }, 0)\n    };\n  };\n  var exportToCSV = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var rows = generateTableData();\n      var _calculateTotals = calculateTotals(rows),\n        totalMass = _calculateTotals.totalMass,\n        totalCost = _calculateTotals.totalCost;\n      var csv = 'Category,Item,Mass,Cost\\n';\n      rows.forEach(function (row) {\n        csv += `${row.category},${row.item},${row.mass},${row.cost.toFixed(2)}\\n`;\n      });\n      csv += 'Crew,Pilot,0,0\\n';\n      if (staffRequirements.engineers > 0) {\n        csv += `Crew,Engineers (x${staffRequirements.engineers}),0,0\\n`;\n      }\n      if (staffRequirements.gunners > 0) {\n        csv += `Crew,Gunners (x${staffRequirements.gunners}),0,0\\n`;\n      }\n      if (staffRequirements.serviceStaff > 0) {\n        csv += `Crew,Service Staff (x${staffRequirements.serviceStaff}),0,0\\n`;\n      }\n      if (staffRequirements.medics > 0) {\n        csv += `Crew,Medical Staff (x${staffRequirements.medics}),0,0\\n`;\n      }\n      csv += `Crew,Total (${staffRequirements.total}),0,0\\n`;\n      csv += `,Total,${totalMass},${totalCost.toFixed(2)}\\n`;\n      try {\n        yield Share.share({\n          message: csv,\n          title: `${shipDesign.ship.name} - Ship Design Export`\n        });\n      } catch (error) {\n        Alert.alert('Export Error', 'Failed to export ship design');\n      }\n    });\n    return function exportToCSV() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var tableRows = generateTableData();\n  var _calculateTotals2 = calculateTotals(tableRows),\n    totalMass = _calculateTotals2.totalMass,\n    totalCost = _calculateTotals2.totalCost;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: shipDesign.ship.name\n      }), _jsxs(TouchableOpacity, {\n        style: styles.exportButton,\n        onPress: exportToCSV,\n        children: [_jsx(MaterialIcons, {\n          name: \"share\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: styles.exportButtonText,\n          children: \"Export\"\n        })]\n      })]\n    }), _jsxs(ScrollView, {\n      style: styles.scrollView,\n      showsVerticalScrollIndicator: false,\n      children: [_jsxs(View, {\n        style: styles.tableContainer,\n        children: [_jsxs(View, {\n          style: styles.tableHeader,\n          children: [_jsx(Text, {\n            style: [styles.tableHeaderText, styles.categoryColumn],\n            children: \"Category\"\n          }), _jsx(Text, {\n            style: [styles.tableHeaderText, styles.itemColumn],\n            children: \"Item\"\n          }), _jsx(Text, {\n            style: [styles.tableHeaderText, styles.massColumn],\n            children: \"Mass\"\n          }), _jsx(Text, {\n            style: [styles.tableHeaderText, styles.costColumn],\n            children: \"Cost\"\n          })]\n        }), tableRows.map(function (row, index) {\n          return _jsxs(View, {\n            style: [styles.tableRow, index % 2 === 0 && styles.evenRow],\n            children: [_jsx(Text, {\n              style: [styles.tableCellText, styles.categoryColumn],\n              children: row.category\n            }), _jsx(Text, {\n              style: [styles.tableCellText, styles.itemColumn],\n              numberOfLines: 2,\n              children: row.item\n            }), _jsx(Text, {\n              style: [styles.tableCellText, styles.massColumn],\n              children: row.mass.toFixed(1)\n            }), _jsx(Text, {\n              style: [styles.tableCellText, styles.costColumn],\n              children: row.cost.toFixed(2)\n            })]\n          }, index);\n        }), _jsx(View, {\n          style: styles.crewHeader,\n          children: _jsx(Text, {\n            style: styles.crewHeaderText,\n            children: \"Crew\"\n          })\n        }), _jsxs(View, {\n          style: styles.tableRow,\n          children: [_jsx(Text, {\n            style: [styles.tableCellText, styles.categoryColumn],\n            children: \"Crew\"\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.itemColumn],\n            children: \"Pilot\"\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.massColumn],\n            children: \"-\"\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.costColumn],\n            children: \"-\"\n          })]\n        }), staffRequirements.engineers > 0 && _jsxs(View, {\n          style: styles.tableRow,\n          children: [_jsx(Text, {\n            style: [styles.tableCellText, styles.categoryColumn]\n          }), _jsxs(Text, {\n            style: [styles.tableCellText, styles.itemColumn],\n            children: [\"Engineers (\", staffRequirements.engineers, \")\"]\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.massColumn],\n            children: \"-\"\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.costColumn],\n            children: \"-\"\n          })]\n        }), staffRequirements.gunners > 0 && _jsxs(View, {\n          style: styles.tableRow,\n          children: [_jsx(Text, {\n            style: [styles.tableCellText, styles.categoryColumn]\n          }), _jsxs(Text, {\n            style: [styles.tableCellText, styles.itemColumn],\n            children: [\"Gunners (\", staffRequirements.gunners, \")\"]\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.massColumn],\n            children: \"-\"\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.costColumn],\n            children: \"-\"\n          })]\n        }), staffRequirements.serviceStaff > 0 && _jsxs(View, {\n          style: styles.tableRow,\n          children: [_jsx(Text, {\n            style: [styles.tableCellText, styles.categoryColumn]\n          }), _jsxs(Text, {\n            style: [styles.tableCellText, styles.itemColumn],\n            children: [\"Service Staff (\", staffRequirements.serviceStaff, \")\"]\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.massColumn],\n            children: \"-\"\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.costColumn],\n            children: \"-\"\n          })]\n        }), staffRequirements.medics > 0 && _jsxs(View, {\n          style: styles.tableRow,\n          children: [_jsx(Text, {\n            style: [styles.tableCellText, styles.categoryColumn]\n          }), _jsxs(Text, {\n            style: [styles.tableCellText, styles.itemColumn],\n            children: [\"Medical Staff (\", staffRequirements.medics, \")\"]\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.massColumn],\n            children: \"-\"\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.costColumn],\n            children: \"-\"\n          })]\n        }), _jsxs(View, {\n          style: styles.tableRow,\n          children: [_jsx(Text, {\n            style: [styles.tableCellText, styles.categoryColumn]\n          }), _jsxs(Text, {\n            style: [styles.tableCellText, styles.itemColumn, styles.totalText],\n            children: [\"Total (\", staffRequirements.total, \")\"]\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.massColumn],\n            children: \"-\"\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.costColumn],\n            children: \"-\"\n          })]\n        }), _jsxs(View, {\n          style: styles.totalsRow,\n          children: [_jsx(Text, {\n            style: [styles.tableCellText, styles.categoryColumn]\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.itemColumn, styles.totalText],\n            children: \"Total\"\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.massColumn, styles.totalText],\n            children: totalMass.toFixed(1)\n          }), _jsx(Text, {\n            style: [styles.tableCellText, styles.costColumn, styles.totalText],\n            children: totalCost.toFixed(2)\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.summaryCard,\n        children: [_jsx(Text, {\n          style: styles.summaryTitle,\n          children: \"Design Summary\"\n        }), _jsxs(View, {\n          style: styles.summaryRow,\n          children: [_jsx(Text, {\n            style: styles.summaryLabel,\n            children: \"Ship Name:\"\n          }), _jsx(Text, {\n            style: styles.summaryValue,\n            children: shipDesign.ship.name\n          })]\n        }), _jsxs(View, {\n          style: styles.summaryRow,\n          children: [_jsx(Text, {\n            style: styles.summaryLabel,\n            children: \"Tech Level:\"\n          }), _jsx(Text, {\n            style: styles.summaryValue,\n            children: shipDesign.ship.tech_level\n          })]\n        }), _jsxs(View, {\n          style: styles.summaryRow,\n          children: [_jsx(Text, {\n            style: styles.summaryLabel,\n            children: \"Hull Tonnage:\"\n          }), _jsxs(Text, {\n            style: styles.summaryValue,\n            children: [shipDesign.ship.tonnage, \" tons\"]\n          })]\n        }), _jsxs(View, {\n          style: styles.summaryRow,\n          children: [_jsx(Text, {\n            style: styles.summaryLabel,\n            children: \"Total Mass:\"\n          }), _jsxs(Text, {\n            style: styles.summaryValue,\n            children: [totalMass.toFixed(1), \" tons\"]\n          })]\n        }), _jsxs(View, {\n          style: styles.summaryRow,\n          children: [_jsx(Text, {\n            style: styles.summaryLabel,\n            children: \"Total Cost:\"\n          }), _jsxs(Text, {\n            style: styles.summaryValue,\n            children: [totalCost.toFixed(2), \" MCr\"]\n          })]\n        }), _jsxs(View, {\n          style: styles.summaryRow,\n          children: [_jsx(Text, {\n            style: styles.summaryLabel,\n            children: \"Total Crew:\"\n          }), _jsx(Text, {\n            style: styles.summaryValue,\n            children: staffRequirements.total\n          })]\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ecf0f1'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#2c3e50'\n  },\n  exportButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#3498db',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 8\n  },\n  exportButtonText: {\n    color: '#fff',\n    fontWeight: '600',\n    marginLeft: 6\n  },\n  scrollView: {\n    flex: 1,\n    padding: 16\n  },\n  tableContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    marginBottom: 16,\n    overflow: 'hidden'\n  },\n  tableHeader: {\n    flexDirection: 'row',\n    backgroundColor: '#34495e',\n    paddingVertical: 12,\n    paddingHorizontal: 8\n  },\n  tableHeaderText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  tableRow: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ecf0f1'\n  },\n  evenRow: {\n    backgroundColor: '#f8f9fa'\n  },\n  tableCellText: {\n    fontSize: 13,\n    color: '#2c3e50',\n    textAlign: 'center'\n  },\n  categoryColumn: {\n    flex: 1.2,\n    textAlign: 'left'\n  },\n  itemColumn: {\n    flex: 2,\n    textAlign: 'left'\n  },\n  massColumn: {\n    flex: 1\n  },\n  costColumn: {\n    flex: 1\n  },\n  crewHeader: {\n    backgroundColor: '#3498db',\n    paddingVertical: 8,\n    paddingHorizontal: 8\n  },\n  crewHeaderText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  totalsRow: {\n    flexDirection: 'row',\n    backgroundColor: '#2ecc71',\n    paddingVertical: 12,\n    paddingHorizontal: 8\n  },\n  totalText: {\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  summaryCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16\n  },\n  summaryTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#2c3e50',\n    marginBottom: 16,\n    textAlign: 'center'\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8\n  },\n  summaryLabel: {\n    fontSize: 16,\n    color: '#7f8c8d'\n  },\n  summaryValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2c3e50'\n  }\n});\nexport default ShipDesignScreen;","map":{"version":3,"names":["React","useContext","View","Text","StyleSheet","ScrollView","TouchableOpacity","Alert","Share","MaterialIcons","ShipDesignContext","getBridgeMassAndCost","calculateTotalFuelMass","WEAPON_TYPES","DEFENSE_TYPES","BERTH_TYPES","FACILITY_TYPES","CARGO_TYPES","VEHICLE_TYPES","DRONE_TYPES","COMMS_SENSORS_TYPES","jsx","_jsx","jsxs","_jsxs","ShipDesignScreen","_ref","shipDesign","staffRequirements","generateTableData","_shipDesign$engines$f","_shipDesign$engines$f2","rows","push","category","item","ship","tonnage","mass","cost","hull_cost","bridgeFitting","fittings","find","f","fitting_type","isHalfBridge","is_half_bridge","bridgeData","engines","length","forEach","engine","performance","quantity","engine_type","displayQuantity","fuelFitting","fuelWeeks","fuel_weeks","jumpPerformance","e","maneuverPerformance","fuelMass","commsFitting","commsType","comms_sensors_type","commsData","c","type","name","weapons","weapon","weaponType","w","weapon_type","defenses","defense","defenseType","d","defense_type","totalSand","reduce","total","includes","sand_tons","berths","berth","berthType","b","berth_type","facilities","facility","facilityType","facility_type","cargo","cargoType","cargo_type","costPerTon","vehicles","vehicle","vehicleType","v","vehicle_type","drones","drone","droneType","drone_type","calculateTotals","totalMass","sum","row","totalCost","exportToCSV","_ref2","_asyncToGenerator","_calculateTotals","csv","toFixed","engineers","gunners","serviceStaff","medics","share","message","title","error","alert","apply","arguments","tableRows","_calculateTotals2","style","styles","container","children","header","exportButton","onPress","size","color","exportButtonText","scrollView","showsVerticalScrollIndicator","tableContainer","tableHeader","tableHeaderText","categoryColumn","itemColumn","massColumn","costColumn","map","index","tableRow","evenRow","tableCellText","numberOfLines","crewHeader","crewHeaderText","totalText","totalsRow","summaryCard","summaryTitle","summaryRow","summaryLabel","summaryValue","tech_level","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","padding","borderBottomWidth","borderBottomColor","fontSize","fontWeight","paddingHorizontal","paddingVertical","borderRadius","marginLeft","marginBottom","overflow","textAlign"],"sources":["/mnt/c/users/Dave/play/aid/starship-designer-rn/src/screens/ShipDesignScreen.tsx"],"sourcesContent":["// Ship Design Summary Screen - Complete ship design overview with table format\nimport React, { useContext } from 'react';\nimport { \n  View, \n  Text, \n  StyleSheet, \n  ScrollView, \n  TouchableOpacity,\n  Alert,\n  Share\n} from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { ShipDesignContext } from '../context/ShipDesignContext';\nimport { getBridgeMassAndCost, calculateTotalFuelMass, WEAPON_TYPES, DEFENSE_TYPES, BERTH_TYPES, FACILITY_TYPES, CARGO_TYPES, VEHICLE_TYPES, DRONE_TYPES, COMMS_SENSORS_TYPES } from '../data/constants';\n\ninterface TableRow {\n  category: string;\n  item: string;\n  mass: number;\n  cost: number;\n}\n\nconst ShipDesignScreen: React.FC = () => {\n  const { shipDesign, staffRequirements } = useContext(ShipDesignContext)!;\n\n  const generateTableData = (): TableRow[] => {\n    const rows: TableRow[] = [];\n\n    // Hull\n    rows.push({\n      category: 'Hull',\n      item: `${shipDesign.ship.tonnage} tons`,\n      mass: shipDesign.ship.tonnage,\n      cost: shipDesign.ship.hull_cost\n    });\n\n    // Bridge\n    const bridgeFitting = shipDesign.fittings.find(f => f.fitting_type === 'bridge');\n    const isHalfBridge = bridgeFitting?.is_half_bridge || false;\n    const bridgeData = getBridgeMassAndCost(shipDesign.ship.tonnage, isHalfBridge);\n    rows.push({\n      category: 'Bridge',\n      item: isHalfBridge ? 'Half Bridge' : 'Bridge',\n      mass: bridgeData.mass,\n      cost: bridgeData.cost\n    });\n\n    // Engines\n    if (shipDesign.engines.length > 0) {\n      shipDesign.engines.forEach(engine => {\n        const mass = (shipDesign.ship.tonnage * engine.performance * 0.02) * engine.quantity;\n        const cost = engine.engine_type === 'jump' \n          ? (shipDesign.ship.tonnage * engine.performance * 0.02) * engine.quantity\n          : (shipDesign.ship.tonnage * engine.performance * 0.01) * engine.quantity;\n        \n        const displayQuantity = engine.quantity > 1 ? ` (x${engine.quantity})` : '';\n        rows.push({\n          category: 'Engines',\n          item: `${engine.engine_type === 'jump' ? 'Jump' : 'Maneuver'} Drive-${engine.performance}${displayQuantity}`,\n          mass,\n          cost\n        });\n      });\n    }\n\n    // Fuel\n    const fuelFitting = shipDesign.fittings.find(f => f.fitting_type === 'fuel_tank');\n    const fuelWeeks = fuelFitting?.fuel_weeks || 4;\n    const jumpPerformance = shipDesign.engines.find(e => e.engine_type === 'jump')?.performance || 0;\n    const maneuverPerformance = shipDesign.engines.find(e => e.engine_type === 'maneuver')?.performance || 0;\n    const fuelMass = calculateTotalFuelMass(shipDesign.ship.tonnage, jumpPerformance, maneuverPerformance, fuelWeeks);\n    \n    if (fuelMass > 0) {\n      rows.push({\n        category: 'Fuel',\n        item: `Fuel (${fuelWeeks} weeks)`,\n        mass: fuelMass,\n        cost: 0\n      });\n    }\n\n    // Communications & Sensors\n    const commsFitting = shipDesign.fittings.find(f => f.fitting_type === 'comms_sensors');\n    const commsType = commsFitting?.comms_sensors_type || 'standard';\n    const commsData = COMMS_SENSORS_TYPES.find(c => c.type === commsType);\n    if (commsData && commsData.mass > 0) {\n      rows.push({\n        category: 'Communications',\n        item: `${commsData.name} Sensors`,\n        mass: commsData.mass,\n        cost: commsData.cost\n      });\n    }\n\n    // Weapons\n    if (shipDesign.weapons.length > 0) {\n      shipDesign.weapons.forEach(weapon => {\n        const weaponType = WEAPON_TYPES.find(w => w.name === weapon.weapon_type);\n        if (weaponType) {\n          const displayQuantity = weapon.quantity > 1 ? ` (x${weapon.quantity})` : '';\n          rows.push({\n            category: 'Weapons',\n            item: `${weapon.weapon_type}${displayQuantity}`,\n            mass: weaponType.mass * weapon.quantity,\n            cost: weaponType.cost * weapon.quantity\n          });\n        }\n      });\n    }\n\n    // Defenses\n    if (shipDesign.defenses.length > 0) {\n      shipDesign.defenses.forEach(defense => {\n        const defenseType = DEFENSE_TYPES.find(d => d.type === defense.defense_type);\n        if (defenseType) {\n          const displayQuantity = defense.quantity > 1 ? ` (x${defense.quantity})` : '';\n          rows.push({\n            category: 'Defenses',\n            item: `${defenseType.name}${displayQuantity}`,\n            mass: defenseType.mass * defense.quantity,\n            cost: defenseType.cost * defense.quantity\n          });\n        }\n      });\n\n      // Add sand if any defenses use it\n      const totalSand = shipDesign.defenses.reduce((total, defense) => {\n        if (defense.defense_type.includes('sandcaster') && defense.sand_tons && defense.sand_tons > 0) {\n          return total + defense.sand_tons;\n        }\n        return total;\n      }, 0);\n\n      if (totalSand > 0) {\n        rows.push({\n          category: 'Defenses',\n          item: 'Sand',\n          mass: totalSand,\n          cost: 0\n        });\n      }\n    }\n\n    // Berths\n    if (shipDesign.berths.length > 0) {\n      shipDesign.berths.forEach(berth => {\n        const berthType = BERTH_TYPES.find(b => b.type === berth.berth_type);\n        if (berthType && berth.quantity > 0) {\n          const displayQuantity = berth.quantity > 1 ? ` (x${berth.quantity})` : '';\n          rows.push({\n            category: 'Berths',\n            item: `${berthType.name}${displayQuantity}`,\n            mass: berthType.mass * berth.quantity,\n            cost: berthType.cost * berth.quantity\n          });\n        }\n      });\n    }\n\n    // Recreation & Health\n    if (shipDesign.facilities.length > 0) {\n      shipDesign.facilities.forEach(facility => {\n        const facilityType = FACILITY_TYPES.find(f => f.type === facility.facility_type);\n        if (facilityType && facility.quantity > 0) {\n          const displayQuantity = facility.quantity > 1 ? ` (x${facility.quantity})` : '';\n          rows.push({\n            category: 'Rec/Health',\n            item: `${facilityType.name}${displayQuantity}`,\n            mass: facilityType.mass * facility.quantity,\n            cost: facilityType.cost * facility.quantity\n          });\n        }\n      });\n    }\n\n    // Cargo\n    if (shipDesign.cargo.length > 0) {\n      shipDesign.cargo.forEach(cargo => {\n        const cargoType = CARGO_TYPES.find(c => c.type === cargo.cargo_type);\n        if (cargoType && cargo.tonnage > 0) {\n          rows.push({\n            category: 'Cargo',\n            item: cargoType.name,\n            mass: cargo.tonnage,\n            cost: cargoType.costPerTon * cargo.tonnage\n          });\n        }\n      });\n    }\n\n    // Vehicles\n    if (shipDesign.vehicles.length > 0) {\n      shipDesign.vehicles.forEach(vehicle => {\n        const vehicleType = VEHICLE_TYPES.find(v => v.type === vehicle.vehicle_type);\n        if (vehicleType && vehicle.quantity > 0) {\n          const displayQuantity = vehicle.quantity > 1 ? ` (x${vehicle.quantity})` : '';\n          rows.push({\n            category: 'Vehicles',\n            item: `${vehicleType.name}${displayQuantity}`,\n            mass: vehicleType.mass * vehicle.quantity,\n            cost: vehicleType.cost * vehicle.quantity\n          });\n        }\n      });\n    }\n\n    // Drones\n    if (shipDesign.drones.length > 0) {\n      shipDesign.drones.forEach(drone => {\n        const droneType = DRONE_TYPES.find(d => d.type === drone.drone_type);\n        if (droneType && drone.quantity > 0) {\n          const displayQuantity = drone.quantity > 1 ? ` (x${drone.quantity})` : '';\n          rows.push({\n            category: 'Drones',\n            item: `${droneType.name}${displayQuantity}`,\n            mass: droneType.mass * drone.quantity,\n            cost: droneType.cost * drone.quantity\n          });\n        }\n      });\n    }\n\n    return rows;\n  };\n\n  const calculateTotals = (rows: TableRow[]) => {\n    return {\n      totalMass: rows.reduce((sum, row) => sum + row.mass, 0),\n      totalCost: rows.reduce((sum, row) => sum + row.cost, 0)\n    };\n  };\n\n  const exportToCSV = async () => {\n    const rows = generateTableData();\n    const { totalMass, totalCost } = calculateTotals(rows);\n    \n    let csv = 'Category,Item,Mass,Cost\\n';\n    \n    rows.forEach(row => {\n      csv += `${row.category},${row.item},${row.mass},${row.cost.toFixed(2)}\\n`;\n    });\n    \n    // Add crew section\n    csv += 'Crew,Pilot,0,0\\n';\n    if (staffRequirements.engineers > 0) {\n      csv += `Crew,Engineers (x${staffRequirements.engineers}),0,0\\n`;\n    }\n    if (staffRequirements.gunners > 0) {\n      csv += `Crew,Gunners (x${staffRequirements.gunners}),0,0\\n`;\n    }\n    if (staffRequirements.serviceStaff > 0) {\n      csv += `Crew,Service Staff (x${staffRequirements.serviceStaff}),0,0\\n`;\n    }\n    if (staffRequirements.medics > 0) {\n      csv += `Crew,Medical Staff (x${staffRequirements.medics}),0,0\\n`;\n    }\n    csv += `Crew,Total (${staffRequirements.total}),0,0\\n`;\n    \n    // Add totals\n    csv += `,Total,${totalMass},${totalCost.toFixed(2)}\\n`;\n\n    try {\n      await Share.share({\n        message: csv,\n        title: `${shipDesign.ship.name} - Ship Design Export`,\n      });\n    } catch (error) {\n      Alert.alert('Export Error', 'Failed to export ship design');\n    }\n  };\n\n  const tableRows = generateTableData();\n  const { totalMass, totalCost } = calculateTotals(tableRows);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>{shipDesign.ship.name}</Text>\n        <TouchableOpacity style={styles.exportButton} onPress={exportToCSV}>\n          <MaterialIcons name=\"share\" size={20} color=\"#fff\" />\n          <Text style={styles.exportButtonText}>Export</Text>\n        </TouchableOpacity>\n      </View>\n\n      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\n        {/* Ship Design Table */}\n        <View style={styles.tableContainer}>\n          <View style={styles.tableHeader}>\n            <Text style={[styles.tableHeaderText, styles.categoryColumn]}>Category</Text>\n            <Text style={[styles.tableHeaderText, styles.itemColumn]}>Item</Text>\n            <Text style={[styles.tableHeaderText, styles.massColumn]}>Mass</Text>\n            <Text style={[styles.tableHeaderText, styles.costColumn]}>Cost</Text>\n          </View>\n\n          {tableRows.map((row, index) => (\n            <View key={index} style={[styles.tableRow, index % 2 === 0 && styles.evenRow]}>\n              <Text style={[styles.tableCellText, styles.categoryColumn]}>{row.category}</Text>\n              <Text style={[styles.tableCellText, styles.itemColumn]} numberOfLines={2}>{row.item}</Text>\n              <Text style={[styles.tableCellText, styles.massColumn]}>{row.mass.toFixed(1)}</Text>\n              <Text style={[styles.tableCellText, styles.costColumn]}>{row.cost.toFixed(2)}</Text>\n            </View>\n          ))}\n\n          {/* Crew Section */}\n          <View style={styles.crewHeader}>\n            <Text style={styles.crewHeaderText}>Crew</Text>\n          </View>\n\n          <View style={styles.tableRow}>\n            <Text style={[styles.tableCellText, styles.categoryColumn]}>Crew</Text>\n            <Text style={[styles.tableCellText, styles.itemColumn]}>Pilot</Text>\n            <Text style={[styles.tableCellText, styles.massColumn]}>-</Text>\n            <Text style={[styles.tableCellText, styles.costColumn]}>-</Text>\n          </View>\n\n          {staffRequirements.engineers > 0 && (\n            <View style={styles.tableRow}>\n              <Text style={[styles.tableCellText, styles.categoryColumn]}></Text>\n              <Text style={[styles.tableCellText, styles.itemColumn]}>Engineers ({staffRequirements.engineers})</Text>\n              <Text style={[styles.tableCellText, styles.massColumn]}>-</Text>\n              <Text style={[styles.tableCellText, styles.costColumn]}>-</Text>\n            </View>\n          )}\n\n          {staffRequirements.gunners > 0 && (\n            <View style={styles.tableRow}>\n              <Text style={[styles.tableCellText, styles.categoryColumn]}></Text>\n              <Text style={[styles.tableCellText, styles.itemColumn]}>Gunners ({staffRequirements.gunners})</Text>\n              <Text style={[styles.tableCellText, styles.massColumn]}>-</Text>\n              <Text style={[styles.tableCellText, styles.costColumn]}>-</Text>\n            </View>\n          )}\n\n          {staffRequirements.serviceStaff > 0 && (\n            <View style={styles.tableRow}>\n              <Text style={[styles.tableCellText, styles.categoryColumn]}></Text>\n              <Text style={[styles.tableCellText, styles.itemColumn]}>Service Staff ({staffRequirements.serviceStaff})</Text>\n              <Text style={[styles.tableCellText, styles.massColumn]}>-</Text>\n              <Text style={[styles.tableCellText, styles.costColumn]}>-</Text>\n            </View>\n          )}\n\n          {staffRequirements.medics > 0 && (\n            <View style={styles.tableRow}>\n              <Text style={[styles.tableCellText, styles.categoryColumn]}></Text>\n              <Text style={[styles.tableCellText, styles.itemColumn]}>Medical Staff ({staffRequirements.medics})</Text>\n              <Text style={[styles.tableCellText, styles.massColumn]}>-</Text>\n              <Text style={[styles.tableCellText, styles.costColumn]}>-</Text>\n            </View>\n          )}\n\n          <View style={styles.tableRow}>\n            <Text style={[styles.tableCellText, styles.categoryColumn]}></Text>\n            <Text style={[styles.tableCellText, styles.itemColumn, styles.totalText]}>Total ({staffRequirements.total})</Text>\n            <Text style={[styles.tableCellText, styles.massColumn]}>-</Text>\n            <Text style={[styles.tableCellText, styles.costColumn]}>-</Text>\n          </View>\n\n          {/* Totals Row */}\n          <View style={styles.totalsRow}>\n            <Text style={[styles.tableCellText, styles.categoryColumn]}></Text>\n            <Text style={[styles.tableCellText, styles.itemColumn, styles.totalText]}>Total</Text>\n            <Text style={[styles.tableCellText, styles.massColumn, styles.totalText]}>{totalMass.toFixed(1)}</Text>\n            <Text style={[styles.tableCellText, styles.costColumn, styles.totalText]}>{totalCost.toFixed(2)}</Text>\n          </View>\n        </View>\n\n        {/* Summary Stats */}\n        <View style={styles.summaryCard}>\n          <Text style={styles.summaryTitle}>Design Summary</Text>\n          <View style={styles.summaryRow}>\n            <Text style={styles.summaryLabel}>Ship Name:</Text>\n            <Text style={styles.summaryValue}>{shipDesign.ship.name}</Text>\n          </View>\n          <View style={styles.summaryRow}>\n            <Text style={styles.summaryLabel}>Tech Level:</Text>\n            <Text style={styles.summaryValue}>{shipDesign.ship.tech_level}</Text>\n          </View>\n          <View style={styles.summaryRow}>\n            <Text style={styles.summaryLabel}>Hull Tonnage:</Text>\n            <Text style={styles.summaryValue}>{shipDesign.ship.tonnage} tons</Text>\n          </View>\n          <View style={styles.summaryRow}>\n            <Text style={styles.summaryLabel}>Total Mass:</Text>\n            <Text style={styles.summaryValue}>{totalMass.toFixed(1)} tons</Text>\n          </View>\n          <View style={styles.summaryRow}>\n            <Text style={styles.summaryLabel}>Total Cost:</Text>\n            <Text style={styles.summaryValue}>{totalCost.toFixed(2)} MCr</Text>\n          </View>\n          <View style={styles.summaryRow}>\n            <Text style={styles.summaryLabel}>Total Crew:</Text>\n            <Text style={styles.summaryValue}>{staffRequirements.total}</Text>\n          </View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ecf0f1',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#2c3e50',\n  },\n  exportButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#3498db',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 8,\n  },\n  exportButtonText: {\n    color: '#fff',\n    fontWeight: '600',\n    marginLeft: 6,\n  },\n  scrollView: {\n    flex: 1,\n    padding: 16,\n  },\n  tableContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    marginBottom: 16,\n    overflow: 'hidden',\n  },\n  tableHeader: {\n    flexDirection: 'row',\n    backgroundColor: '#34495e',\n    paddingVertical: 12,\n    paddingHorizontal: 8,\n  },\n  tableHeaderText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 14,\n    textAlign: 'center',\n  },\n  tableRow: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ecf0f1',\n  },\n  evenRow: {\n    backgroundColor: '#f8f9fa',\n  },\n  tableCellText: {\n    fontSize: 13,\n    color: '#2c3e50',\n    textAlign: 'center',\n  },\n  categoryColumn: {\n    flex: 1.2,\n    textAlign: 'left',\n  },\n  itemColumn: {\n    flex: 2,\n    textAlign: 'left',\n  },\n  massColumn: {\n    flex: 1,\n  },\n  costColumn: {\n    flex: 1,\n  },\n  crewHeader: {\n    backgroundColor: '#3498db',\n    paddingVertical: 8,\n    paddingHorizontal: 8,\n  },\n  crewHeaderText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  totalsRow: {\n    flexDirection: 'row',\n    backgroundColor: '#2ecc71',\n    paddingVertical: 12,\n    paddingHorizontal: 8,\n  },\n  totalText: {\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  summaryCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n  },\n  summaryTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#2c3e50',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  summaryLabel: {\n    fontSize: 16,\n    color: '#7f8c8d',\n  },\n  summaryValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#2c3e50',\n  },\n});\n\nexport default ShipDesignScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}